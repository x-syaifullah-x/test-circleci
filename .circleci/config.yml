version: 2.1
jobs:
  build:
    machine:
      image: android:202102-01
    resource_class: large
    environment:
      JVM_OPTS: -Xmx4096m
    steps:
      - checkout
      -run:
        name: a
        command: aa="test"
      -run:
        name: b
        command: echo $aa
      #      - run:
      #          name: Sdk List
      #          command: |
      #            sdkmanager --list

#       - run:
#           name: create avd
#           command: |
#             SYSTEM_IMAGES="system-images;android-30;google_apis;x86_64"
#             sdkmanager "$SYSTEM_IMAGES"
#             echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"

#       - run:
#           name: launch emulator
#           command: |
#             emulator -avd test -delay-adb -verbose -no-window -noaudio -no-boot-anim -memory 4096 -accel on
# #            -qemu -m 4096 -smp cores=4 -enable-kvm
#           background: true

#       - run:
#           name: genarate cache key
#           command: |
#             find . -name 'build.gradle' | sort | xargs cat |
#             shasum | awk '{print $1}' > /tmp/gradle_cache_seed

#       - restore_cache:
#           key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}

#       - run:
#           name: gradle assemble android test
#           command: |
#             ./gradlew assembleAndroidTest

#       - run:
#           name: wait for emulator to start
#           command: |
#             circle-android wait-for-boot

#       - run:
#           name: disable emulator animations
#           command: |
#             adb shell settings put global window_animation_scale 0.0
#             adb shell settings put global transition_animation_scale 0.0
#             adb shell settings put global animator_duration_scale 0.0

#       - run:
#           name: gradle connected android test
#           command: |
#             MAX_TRIES=2
#             run_with_retry() {
#                n=1
#                until [ $n -gt $MAX_TRIES ]
#                do
#                   echo "Starting test attempt $n"
#                   ./gradlew connectedAndroidTest && break
#                   n=$[$n+1]
#                   sleep 5
#                done
#                if [ $n -gt $MAX_TRIES ]; then
#                  echo "Max tries reached ($MAX_TRIES)"
#                  exit 1
#                fi
#             }
#             run_with_retry

#       - run:
#           name: gradle unit test
#           command: ./gradlew test

#       - store_artifacts:
#           path: app/build/reports
#           destination: reports

#       - store_artifacts:
#           path: app/build/outputs/apk
#           destination: apks

#       - store_test_results:
#           path: app/build/test-results
#           # run in parallel with the emulator starting up, to optimize build time

#       - save_cache:
#           key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
#           paths:
#             - ~/.gradle

workflows:
  build:
    jobs:
      - build
